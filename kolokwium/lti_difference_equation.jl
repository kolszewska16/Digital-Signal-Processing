# problem 12
# średnia sygnału          
function rozwiazanie12(;
    b::Vector{Float64} = [0.007565859165903106, -0.002964141329207259, 0.0069809764063194215, 0.006980976406319421, -0.0029641413292072604, 0.007565859165903106],
    a::Vector{Float64} = [1.0, -3.2777960554763252, 4.5105514453523154, -3.20299624965813, 1.1669195812770186, -0.17351333300884755],
    x::Vector{Float64} = [-0.16, 0.8, 0.92, 0.18, -0.43, 0.99, 0.46, 0.8, -0.38, 0.46, -0.38, -0.49, 0.42, -0.58, -0.7, 0.41, -0.92, 0.84, -0.57, 0.89, 0.04, 0.33, 0.29, -0.83, 0.35, -0.03, 0.74],
    L::Int = 77,
)
    N = length(x)
    M = length(b)
    K = length(a)
    y = zeros(Float64, L)

    for n in 1:L
        for m in 1:M
            if((n - m + 1) > 0 && (n - m + 1) <= N)
                y[n] += b[m] * x[n - m + 1]
            end
        end
        for k in 2:K
            if((n - k + 1) > 0 && n - k + 1 <= N)
                y[n] -= a[k] * x[n - k + 1]
            end
        end
    end

    mean = sum(y) / length(y)
    return mean
end

# 0.0448051948051948
rozwiazanie12()

# problem 23
# wartość skuteczna sygnału          
function rozwiazanie23(;
    b::Vector{Float64} = [0.0025850641842372754, 0.015510385105423652, 0.03877596276355913, 0.05170128368474551, 0.03877596276355913, 0.015510385105423652, 0.0025850641842372754],
    a::Vector{Float64} = [1.0, -2.379721044554775, 2.9104065678646873, -2.055131436773098, 0.8779238976340888, -0.2098654503596897, 0.02183157397997185],
    x::Vector{Float64} = [0.78, 0.55, 0.15, 0.99, 0.99, 0.24, 0.63, 0.73, -0.78, 0.08, 0.65, -0.98, 0.81, -0.64, -0.84, -0.75, 0.94, -0.04, -0.2, 0.66, -0.21, -0.98],
    L::Int = 43,
)
    N = length(x)
    M = length(b)
    K = length(a)
    y = zeros(Float64, L)

    for n in 1:L
        for m in 1:M
            if((n - m + 1) > 0 && (n - m + 1) <= N)
                y[n] += b[m] * x[n - m + 1]
            end
        end
        for k in 2:K
            if((n - k + 1) > 0 && (n - k + 1) <= N)
                y[n] -= a[k] * x[n - k + 1]
            end
        end
    end

    rms = sqrt(sum(abs.(y) .^ 2) / length(y))
    return rms
end

# 2.018121774303988
rozwiazanie23()

# problem 34
# moc sygnału          
function rozwiazanie34(;
    b::Vector{Float64} = [0.4419376000325761, -1.558586615714086, 3.1443562142337984, -3.818929149200471, 3.144356214233798, -1.5585866157140862, 0.4419376000325761],
    a::Vector{Float64} = [1.0, -2.6146370671909045, 3.7694389019755006, -3.4513490882169577, 2.2090568436223847, -0.8701162252207815, 0.1940918829348649],
    x::Vector{Float64} = [-0.62, -0.64, 0.03, 0.49, 0.44, -0.06, 0.33, -0.11, -0.39, -0.24, 0.2, 0.93, 0.54, -0.97, 0.22, -0.85, 0.64, -0.69, -0.36, 0.63, -0.01, 0.68, -0.68, -0.87, -0.47, -0.59, -0.95, 0.57, 0.75, 0.22, 0.14, -0.56, -0.09],
    L::Int = 43,
)
    N = length(x)
    M = length(b)
    K = length(a)
    y = zeros(Float64, L)

    for n in 1:L
        for m in 1:M
            if((n - m + 1) > 0 && (n - m + 1) <= N)
                y[n] += b[m] * x[n - m + 1]
            end
        end
        for k in 2:K
            if((n - k + 1) > 0 && (n - k + 1) <= N)
                y[n] -= a[k] * x[n - k + 1]
            end
        end
    end

    power = sum(abs.(y) .^ 2) / length(y)
    return power
end

# 0.6555072892553799
rozwiazanie34()

# problem 51
# energia sygnału          
function rozwiazanie51(;
    b::Vector{Float64} = [0.13765452052178545, -0.8259271231307127, 2.0648178078267816, -2.753090410435709, 2.0648178078267816, -0.8259271231307127, 0.13765452052178545],
    a::Vector{Float64} = [1.0, -2.2602004426555764, 2.699835625087775, -1.8632667209677467, 0.7832025354037867, -0.18442602402918318, 0.018957965250203487],
    x::Vector{Float64} = [-1.0, 0.24, -0.82, 0.75, 0.85, 0.32, -0.39, 0.52, 0.49, 0.02, -0.01, -0.77, 0.86, -0.12, -0.31, 0.28, -0.17, 0.86, -0.2, 0.32],
    L::Int = 31,
)
    N = length(x)
    M = length(b)
    K = length(a)
    y = zeros(Float64, L)

    for n in 1:L
        for m in 1:M
            if((n - m + 1) > 0 && (n - m + 1) <= N)
                y[n] += b[m] * x[n - m + 1]
            end
        end
        for k in 2:K
            if((n - k + 1) > 0 && (n - k + 1) <= N)
                y[n] -= a[k] * x[n - k + 1]
            end
        end
    end
    energy = sum(abs.(y) .^ 2)
    return energy
end

# 34.811489672507236
rozwiazanie51()

# problem 52
# energia sygnału          
function rozwiazanie52(;
    b::Vector{Float64} = [0.2860349839875222, -1.4072263983896438, 3.7403513880225163, -6.350473163087442, 7.563206382127592, -6.3504731630874405, 3.7403513880225154, -1.4072263983896436, 0.2860349839875221],
    a::Vector{Float64} = [1.0, -3.7055535172065373, 7.365014864472611, -9.784104450598761, 9.536587675832035, -6.913757048058372, 3.8024010102028436, -1.5126687651160444, 0.35415326122131824],
    x::Vector{Float64} = [0.88, -0.17, -0.59, 0.24, 0.45, 0.24, 0.72, 0.61, 0.18, 0.25, 0.09, -0.13, -0.25, 0.65, -0.05, -0.1, -0.51, 0.3, 0.03, -0.86],
    L::Int = 38,
)
    N = length(x)
    M = length(b)
    K = length(a)
    y = zeros(Float64, L)

    for n in 1:L
        for m in 1:M
            if((n - m + 1) > 0 && (n - m + 1) <= N)
                y[n] += b[m] * x[n - m + 1]
            end
        end
        for k in 2:K
            if((n - k + 1) > 0 && (n - k + 1) <= N)
                y[n] -= a[k] * x[n - k + 1]
            end
        end
    end
    energy = sum(abs.(y) .^ 2)
    return energy
end

# 88.11841048815972
rozwiazanie52()